2017/09/09 필기

레드햇(Red Hat Enterprise Linux) : 레드햇이 개발한 컴퓨터 운영 체제이다. 18~24개월에 한 번씩 새로운 버전이 공개되며 라이선스는 별도로 판매하지 않고 있으며 서브스크립션의 형태로 요금을 지불하는 방식으로 계약된다.

X 윈도의 실행
X 윈도를 실행하는 방법에는 부팅 시에 X 윈도를 실행하는 방법(Runlevel 5)와 텍스트 모드(Runlevel 3)에서 실행하는 방법으로 나눌 수 있다. 런 레벨 5로 설정된 상태라면 부팅 시에 X 윈도가 시작되고, 디스플레이 매니저(Display Manager)라는 프로그램이 실행되면서 로그인 창이 나타나게 된다. 디스플레이 매니저는 사용자 이름과 암호를 요청하고 유효한 값이 입력되면 세션을 시작해 주는 역할을 해준다.

evince : 문서 뷰어 프로그램(pdf, PS, EPS 등)

PSD : 포토샵의 기본 파일 포맷

XPS(XML Paper Specification) : 문서 서식이 유지되고 파일 공유가 가능한 고정된 레이아웃의 전자 파일 형식

-------------------------------------------------------------------------------------------------------------

Shell의 종류
bourne Shell : 1977년 스티븐 본이 개발한 유닉스 버전 7의 기본 셸
bash : 1989년 브라이언 폭스가 GNU 프로젝트를 위해 개발한 배시셸은 본 셸을 기반으로 만들어졌다. GNU 운영체제, 리눅스 , 맥 OS X 등 다양한 운영체제에서 사용중이며 현재 리눅스의 표준 셸이다
C 셸 : C 셸(C shell, csh)은 1978년 버클리 대학의 빌 조이가 개발한 것으로 C 언어를 기반으로 만들어졌으며 강력한 프로그램 작성 기능을 가지고 있다. 
tcsh : 1975년 켄 그리어가 테넥스(TENEX)라는 운영체제에 명령행 완성 기능을 반영하게 되었고, 1981년 C Shell 과 통합해서 탄생시킨 것이 tcsh 이다. csh 의 기능을 강화시킨 셸.
ksh : 콘 셸(Korn Shell, ksh) 은 1983년 벨연구소의 데이비트 콘이 개발. 본 셸을 확장해서 만들어졌으며, 벨연구소 사용자들의 요청으로 C 셸의 많은 기능을 추가하였다.

셸에서 사용되는 특수문자
~ : 홈디렉터리
. : 현재 디렉터리를 나타내거나, 명령행 앞에서 source 라는 의미로 셸스크립트 등을 실행시킬 때 사용
.. : 부모 디렉터리
‘ ‘ : 작은따옴표는 모든 문자나 특수문자들을 일반문자로 취급한다.
” ” : 큰따옴표는 $, , \, ! 를 제외한 모든 문자들을 일반문자로 취급한다.
 ` : 역따옴표는 명령 대체 기능을 수행하는데, 명령의 결과를 대체해서 사용한다.
# : 주석
$ : Shell 변수 기호. 뒤에 오는 문자열을 변수로 취급한다.
& : 특정 명령을 백그라운드로 실행할 때 사용한다.
* : 아무것도 없는 경우를 모함한 모든 문자를 의미한다.
: 보통 한 문자를 대체할 때 사용한다. 특정 명령에 대한 결과를 갖는 Return 변수로도 쓰인다.
( ) : 부속 shell(subshell) 을 뜻하는 기호로 하나의 셸 단위로 묶어준다.
\ : 탈출(escape)문자로 바로 다음에 오는 특수문자의 기능을 없앤다. 또한 alias가 설정된 명령어 앞에 사용하는 경우에는 alias 를 없애준다. 긴 명령행 입력 시에 행을 연장할 때도 사용한다.
[] : bracket 라고 부르며 선택할 수 있는 문자를 나열한다. 범위를 지정할 때는 – 를 사용한다.
{} : 안에 나열된 문자열 중 하나로 대치시킨다.
< : 입력 재지정 
> : 출력 재지정
/ : 경로명 디렉터리 분리자
! : 명령문 history

-------------------------------------------------------------------------------------------------------------

데몬(daemon)
시스템에 관련된 작업을 하는 후위 프로세스(background process)를 말한다. 대부분의 데몬은 시스템에 관련된 작업을 하게 되는데, 서비스 요청이 없을 때는 후위 프로세스로서 유휴(idle) 상태에 들어가 있게 되어 시스템의 CPU를 차지하지 않지만 메모리와 기타 자원을 상당수 차지하게 된다. 그렇기에 많은 데몬을 띄울려면 그 만큼 시스템에 자원을 많이 가지고 있어야 한다.

인터넷 슈퍼 데몬(Internet Super Daemon)
xinetd는 Internet Super Daemon을 의미하는 것으로서, SENDMAIL, HTTPD 등과 같이 리눅스 시스템에서 실행되는 데몬의 일종이다. 이 슈퍼 데몬은 리눅스 서버에서 서비스되는 다른 여러가지 데몬들 을 제어하면서 각각의 서비스들의 연결을 담당하고 있다. 슈퍼데몬에 의해 제어가 되는 데몬에는 telnet 이외에 ftp, finger, login, shell 등이 있다.

데몬의 실행모드 Standalone, xinetd
Standalone
독립적으로 실행되며 항상 메모리에 상주하여 서비스 요청이 있을 때 언제든 바로 응답을 한다. 즉, 빠른 응답속드를 요하는 경우에 이 모드를 이용한다. 항상 상주해 있으므로 메모리 점유로 인한 서버 부하를 주는 단점이 있다. 슈퍼 데몬도 standalone모드로 실행이 된다.

xinetd
xinetd모드로 실행이 되는 데몬은 슈퍼 데몬에 의해 관리가 되며, 필요한 경우에만 메모리로 적재되어 실행이 되어 응답을 한다. 응답속도가 standalone 보다 느리고 서버부하를 상대적으로 줄일 수 있다.


데몬 관련 유틸리티
ntsysv 
텍스트 환경에서 커서를 이용하여 부팅 중 자동으로 실행되는 서비스를 설정할 수 있는 유틸리티이다. 명령행에서 옵션 없이 ntsysv를 실행하면 현재 구동된 실행 레벨에 대한 설정을 할 수 있는데, 관련 서비스는 커서로 이동하고 적용유무는 스페이스키를 사용한다.

chkconfig 
텍스트 기반의 명령형 프로그램으로 실행 레벨에 따른 서비스의 on/off 설정 리스트를 출력하거나 설정한다.

system-config-service 
X 윈도를 사용하는 경우에는 명령행에서 system-config-service라고 입력하면 GUI 기반의 유틸리티를 이용하여 설정이 가능하다.

-------------------------------------------------------------------------------------------------------------

포트 번호(Port Number)
IP 프로토콜에 의해 전달된 데이터는 전송 계층 프로토콜인 TCP 및 UDP 등에서 서비스 다중화를 위해 포트(Port)로 관리된다. 각각의 응용 프로그램은 할당된 포트를 이용해 통신할 데이터를 주고 받는다. 포트는 번호로 관리되고, 0번부터 655358번까지 사용된다. 0번부터 1023번까지는 잘 알려진 포트(Well-Known Port)라 하여 HTTP, SMTP, TELNET 등과 같은 주요 프로토콜이 할당받아 주로 시스템에서 사용하고 있다. 리눅스에서는 /etc/services 파일에서 주요 포트 번호를 확인할 수 있다.

A 클래스 주소값( 255.0.0.0 ) 호스트개수 16,777,216
B 클래스 주소값( 255.255.0.0 ) 호스트개수 65,536
C 클래스 주소값( 255.255.255.0 ) 호스트개수 256

C 클래스 기준으로 인터넷에 연결가능한 호스트 수는 네트워크 주소, 브로드캐스트 주소, 게이트웨이 주소를 제외한 253개가 된다.

-------------------------------------------------------------------------------------------------------------

네트워크 설정 관련 명령어
ifconfig : 네트워크 인터페이스를 설정하거나 확인하는 명령이다.

route : 라우팅 테이블의 정보를 출력하거나 관리하는 명령

netstat : 네트워크의 연결상태를 출력하는 명령

arp : 캐시를 관리하는 명령

ping : 인터넷 제어 메시지 프로토콜인 ICMP(Internet Control Message Protocol) 을 이용하여 네트워크 연결을 확인할 수 있는 명령이다. 원격의 호스트와 서로 연결 되어 있는지를 확인하고 패킷을 보내고 받는 시간을 출력하여 네트워크 장애 여부도 판단할 수 있다.

traceroute : 패킷이 특정 호스트까지 라우팅되는 과정을 출력하는 명령으로 라우팅 과정에 장애가 있을 경우 위치를 파악할 수 있다.

nslookup : DNS를 이용하여 도메인이나 IP를 조회하는 명령

dig : 도메인명으로 정보를 조회하는 명령

host : 도메인명으로 정보를 조회하는 명령

hostname : 시스템에 설정된 호스트네임을 출력하거나 설정하는 명령

mii-too : 보통 네트워크 인터페이스의 상태를 점검하고 설정하는 유틸리티

ethool : 이더넷 카드 설정 정보를 출력하거나 변경하는 명령

ip : 이더넷 장치, IP주소, 라우팅 정보등의 설정정보를 출력하거나 변경하는 명령

-------------------------------------------------------------------------------------------------------------

네트워크 관련 파일
/etc/sysconfig/network : 네트워크 사용 유무 지정, 호스트명 설정, 게이트웨이 주소 설정, 게이트웨이 장치파일 설정, NIS 도메인 이름 등이 기록되는 파일이다. 
/etc/sysconfig/network-scripts 디렉터리 : 네트워크 인터페이스 환경 설정과 관련된 파일들이 저장 되는 디렉토리.
/etc/resolv.conf : 시스템에서 사용하는 DNS 서버를 설정하는 파일
/etc/hosts : DNS 서버를 사용하기 이전에 많이 이용된 파일로 IP 주소와 호스트명을 매핑시켜 데이터베이스처럼 사용하는 파일. 자주 이용하는 IP 주소에 별칭을 설정하여 접속을 쉽게 할 수 있다.

Posted in IT/프로그램/리눅스	
Tagged 리눅스마스터 기출문제, 리눅스마스터 해설, 리눅스마스터 1급 해설, 리눅스마스터 1급 필기 해설, 리눅스마스터 1급, 리눅스마스터 1급 필기
댓글 남기기
로그인을 해야 댓글을 남길 수 있습니다.

Previous Post: 리눅스마스터 2급 2차 기출문제 해설/보충설명 1703 20170909 (2)
Next Post: 리눅스마스터 1급 필기 기출문제 해설/보충설명 1702 20170909 (2)
Primary Sidebar

-------------------------------------------------------------------------------------------------------------

YUM (Yellowdog Updater, Modified ) 
rpm기반의 시스템에서 패키지를 손쉽게 설치해 주고 자동으로 업데이트를 수행하는 명령행 기반의 유틸리티이다. 특히 rpm 패키지 설치 시에 가장 많이 발생하는 의존성 문제를 자동으로 해결해 준다.

사용법
yum [option]

주요옵션
-y : 모든 질의에 yes 라고 답한다.
-v : 자세한 정보를 출력한다.

command(명령)
list 항목 : 전체 패키지에 대한 정보를 출력
info 패키지명 : 패키지에 대한 정보를 출력
check-update : 업데이트가 필요한 패키지를 출력
update 패키지명 : 패키지를 업데이트할 때 사용
install 패키지명 : 패키지를 설치할 때 사용
search 문자열 : 문자열이 포함된 패키지를 찾아준다.
remove 패키지명 : 패키지를 삭제할 때 사용한다.
grouplist : 패키지 그룹에 대한 정보를 출력
groupinfo 패키지그룹명 : 해당 패키지 그룹명과 관련된 패키지의 정보를 보여준다.
groupupdate 패키지그룹명 : 지정한 그룹의 패키지를 업데이트 한다.
groupinstall 패키지그룹명 : 지정한 그룹의 패키지를 설치한다.
groupremove 패키지그룹명 : 지정한 그룹의 패키지를 제거한다.
whatprovides : 특정한 파일이나 기능과 관련된 패키지 정보를 검색할 때 사용한다. 
clean 값 : yum 관련해서 저장된 정보를 삭제할 때 사용. 값에는 all, packages, rpmdb 등이 있다

-------------------------------------------------------------------------------------------------------------

RPM 
레드햇사에서 만든 패키지 관리 기법으로 프로그램을 .rpm 형태의 파일로 배포하고, rpm 명령을 사용하여 손쉽게 설치 및 갱신, 제거, 검증, 질의 등의 관리를 할 수 있다. 배포되는 rpm 파일의 형식은 다음과 같다.

설치 및 갱신(install & upgrade) 모드
새로운 패키지를 설치하거나 갱신을 할 수 있다.

제거(erase) 모드
설치된 패키지를 제거한다. 패키지를 제거할 때는 -e 옵션을 사용하는데, 다른 패키지에 대한 의존성이 발생한 경우에는 제거되지 않는다. 의존성이 발생한 패키지를 제거하기 위해서는 먼저 의존성 관련 패키지를 제거하거나, 추가로 nodeps 옵션을 지정해야 한다.

질의(query) 모드
패키지 관련 정보를 알아내기 위해 -q 옵션을 사용한다. -q 옵션만 사용하면 패키지 설치 유무나 간단한 버전정보만 출력한다. 더욱 정확한 정보출력을 위해서 -i, -a -l, -d 등의 옵션과 연동해서 쓴다.

검증(Verify) 모드
검증 모드는 rpm 데이터베이스에 저장되어 있는 패키지의 메타데이터(metadata) 정보를 이용하여 변경된 정보를 찾아내는 모드이다. 검증모드는 -V( verify) 옵션을 사용하고 파일의 크기, 허가권, 소유권, 파일 형식 등에 대한 변경 정보를 출력한다.

리빌드(rebuild) 모드 : rpmbuild
rpm 소스 파일인 .src.rpm 파일을 패키지 파일로 만드는 모드로서 rpmbuild 라는 명령어를 사용한다.

-------------------------------------------------------------------------------------------------------------

프린터 관련 명령어
BSD 계열 : lpr, lpq, lprm, lpc
System V 계열 : lp, lpstat, cancel

-------------------------------------------------------------------------------------------------------------

